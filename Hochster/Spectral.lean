import Mathlib.RingTheory.Spectrum.Prime.Topology

open TopologicalSpace Topology

variable (X : Type*) [TopologicalSpace X]

/--
The constructible topology on `X` is the topology generated by the constructible sets. If `X` is
spectral, then `ConstructibleTopology X` is also called the patch topology on `X`.
-/
def ConstructibleTopology : TopologicalSpace X :=
  generateFrom { S : Set X | IsConstructible S }

namespace ConstructibleTopology

theorem eq_generateFrom_ofSpectralSpace [SpectralSpace X] :
    ConstructibleTopology X =
      generateFrom ({ S : Set X | IsOpen S ∧ IsCompact S } ∪
        { S : Set X | ∃ O : Set X, IsOpen O ∧ IsCompact O ∧ S = Oᶜ }) := by
  delta ConstructibleTopology IsConstructible BooleanSubalgebra.closure
  simp only [BooleanSubalgebra.mem_sInf, Set.mem_setOf_eq]
  sorry

end ConstructibleTopology
